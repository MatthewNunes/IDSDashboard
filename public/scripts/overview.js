async function drawScatter() {
  const dataset = await d3.csv("../resources/SWaT/data2017_time_SWaT.csv");
  dataset.forEach(function(row, index) {
    row["StartTime"] = new Date(row["StartTime"].split("-")[2].split(" ")[0], row["StartTime"].split("-")[1], row["StartTime"].split("-")[0], row["StartTime"].split(" ")[1].split(":")[0], row["StartTime"].split(" ")[1].split(":")[1], row["StartTime"].split(" ")[1].split(":")[2].split(".")[0]);
    row["LastTime"] = new Date(row["LastTime"].split("-")[2].split(" ")[0], row["LastTime"].split("-")[1], row["LastTime"].split("-")[0], row["LastTime"].split(" ")[1].split(":")[0], row["LastTime"].split(" ")[1].split(":")[1], row["LastTime"].split(" ")[1].split(":")[2].split(".")[0]);
    row["Trans"] = parseInt(row["Trans"]);
    row["RunTime"] = parseFloat(row["RunTime"]);
    row["IdleTime"] = parseFloat(row["IdleTime"]);
    row["Mean"] = parseFloat(row["Mean"]);
    row["StdDev"] = parseFloat(row["StdDev"]);
    row["Sum"] = parseFloat(row["Sum"]);
    row["Min"] = parseFloat(row["Min"]);
    row["Max"] = parseFloat(row["Max"]);
    row["SrcAddr"] = parseInt(row["SrcAddr"]);
    row["DstAddr"] = parseInt(row["DstAddr"]);
    row["Proto"] = parseInt(row["Proto"]);
    row["Sport"] = parseInt(row["Sport"]);
    row["Dport"] = parseInt(row["Dport"]);
    row["sTos"] = parseFloat(row["sTos"]);
    row["sDSb"] = parseFloat(row["sDSb"]);
    row["sTtl"] = parseFloat(row["sTtl"]);
    row["sHops"] = parseFloat(row["sHops"]);
    row["TotPkts"] = parseInt(row["TotPkts"]);
    row["SrcPkts"] = parseInt(row["SrcPkts"]);
    row["DstPkts"] = parseInt(row["DstPkts"]);
    row["TotBytes"] = parseInt(row["TotBytes"]);
    row["SrcBytes"] = parseInt(row["SrcBytes"]);
    row["DstBytes"] = parseInt(row["DstBytes"]);
    row["Load"] = parseFloat(row["Load"]);
    row["SrcLoad"] = parseFloat(row["SrcLoad"]);
    row["DstLoad"] = parseFloat(row["DstLoad"]);
    row["Loss"] = parseInt(row["Loss"]);
    row["SrcLoss"] = parseInt(row["SrcLoss"]);
    row["DstLoss"] = parseInt(row["DstLoss"]);
    row["pLoss"] = parseFloat(row["pLoss"]);
    row["Rate"] = parseFloat(row["Rate"]);
    row["SrcRate"] = parseFloat(row["SrcRate"]);
    row["DstRate"] = parseFloat(row["DstRate"]);
    row["Dir"] = parseInt(row["Dir"]);
    row["TcpRtt"] = parseFloat(row["TcpRtt"]);
    row["SynAck"] = parseFloat(row["SynAck"]);
    row["AckDat"] = parseFloat(row["AckDat"]);
    row["sMeanPktSz"] = parseFloat(row["sMeanPktSz"]);
    row["dMeanPktSz"] = parseFloat(row["dMeanPktSz"]);
    row["Flg-e"] = parseInt(row["Flg-e"]);
    row["Flg-g"] = parseInt(row["Flg-g"]);
    row["Flg-r"] = parseInt(row["Flg-r"]);
    row["Flg-d"] = parseInt(row["Flg-d"]);
    row["Flg-i"] = parseInt(row["Flg-i"]);
    row["Flg-s"] = parseInt(row["Flg-s"]);
    row["Flg-U"] = parseInt(row["Flg-U"]);
    row["Flg-&"] = parseInt(row["Flg-&"]);
    row["Flg-*"] = parseInt(row["Flg-*"]);
    row["Flg-*2"] = parseInt(row["Flg-*2"]);
    row["Start"] = parseInt(row["Start"]);
    row["Status"] = parseInt(row["Status"]);
    row["CON"] = parseInt(row["CON"]);
    row["ECO"] = parseInt(row["ECO"]);
    row["FIN"] = parseInt(row["FIN"]);
    row["INT"] = parseInt(row["INT"]);
    row["REQ"] = parseInt(row["REQ"]);
    row["RST"] = parseInt(row["RST"]);
    row["URN"] = parseInt(row["URN"]);
    row["URP"] = parseInt(row["URP"]);
    row["Classification"] = parseInt(row["Classification"]);
  });
  console.table(dataset[0]);
}
drawScatter();
